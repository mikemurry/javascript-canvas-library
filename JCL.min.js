var JCL=JCL||{log:function log(a){console.log(a)},info:function info(a){console.info(a)},warn:function warn(a){console.warn(a)},error:function error(a){console.error(a)}};JCL.namespace=function(c){var e,b,a,d;b=JCL;e=c.split(".");if(e[0]==="JCL"){e=e.slice(1)}d=e.length;for(a=0;a<d;a++){if(typeof b[e[a]]==="undefined"){b[e[a]]={}}b=b[e[a]]}return b};JCL.utilities={randomInt:function randomInt(b,a){if(b!==undefined&&a!==undefined){return Math.floor((a-b)*Math.random())+b}else{JCL.warn("utilities.randomInt() Error: Missing min or max argument.")}return false},radians:function radians(a){return(Math.PI/180)*a},degrees:function degrees(a){return a*(180/Math.PI)},createFragment:function createFragment(d,b){var c=document.createDocumentFragment(),a=document.createElement("div");a.id=d;a.innerHTML=b;while(a.firstChild){c.appendChild(a.firstChild)}return c}};JCL.renderer=(function(){window.requestAnimFrame=(function e(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i){window.setTimeout(i,1000/60)}})();var f,b,d;f=[];b=0;d=33;function h(){for(var j=0;j<b;j++){f[j]()}e(h)}function g(j){var i=f.push(j);b=i;return i-1}function c(j){f.splice(j,1);b=f.length}function a(i){d=Math.floor(1000/i)}h();return{registerRender:g,deregisterRender:c,setFPS:a}}());JCL.Canvas=function Canvas(b,a){this.dom=document.getElementById(b);this.ctx=this.dom.getContext("2d");this.enabled=(this.ctx!==undefined);if(this.enabled){if(a.width){this.dom.width=a.width}if(a.height){this.dom.height=a.height}if(a.fullscreen){this.dom.width=window.innerWidth;this.dom.height=window.innerHeight}if(a.zindex){this.dom.style.zIndex=a.zindex}this.width=this.dom.width;this.height=this.dom.height}else{JCL.warn("Canvas (ID: '"+b+"') cannot be enabled.")}};JCL.Canvas.prototype={drawRectangle:function drawRectangle(b,g,c,e,d,f,a){if(d){this.ctx.fillStyle=d;this.ctx.fillRect(b,g,c,e)}if(f){this.ctx.strokeStyle=f;this.ctx.lineWidth=a||1;this.ctx.strokeRect(b,g,c,e)}},drawPath:function drawPath(b,e,a){var d=b.length,c;this.ctx.strokeStyle=e||"#000000";this.ctx.lineWidth=a||1;this.ctx.beginPath();this.ctx.moveTo(b[0].x,b[0].y);for(c=1;c<d;c++){this.ctx.lineTo(b[c].x,b[c].y)}this.ctx.stroke()},drawHaystack:function drawHaystack(b,e,a){var d=b.length,c;this.ctx.strokeStyle=e||"#000000";this.ctx.lineWidth=a||1;this.ctx.beginPath();for(c=0;c<d;c++){this.ctx.moveTo(b[c][0].x,b[c][0].y);this.ctx.lineTo(b[c][1].x,b[c][1].y)}this.ctx.stroke()},drawCircle:function drawCircle(c,b,d,e,a){this.ctx.beginPath();this.ctx.arc(c.x,c.y,b,0,Math.PI*2,false);if(d){this.ctx.fillStyle=d;this.ctx.fill()}if(e){this.ctx.strokeStyle=e;this.ctx.lineWidth=a||1;this.ctx.stroke()}},drawText:function drawText(d,f,c,e,a,b){if(b){this.ctx.fillStyle=b}this.ctx.font="bold 10px sans-serif";if(c){this.ctx.textBaseline=c}if(e){this.ctx.textAlign=e}this.ctx.fillText(d,f.x,f.y,a?a:null)},clearRect:function clearRect(a,d,b,c){this.ctx.clearRect(a,d,b,c)},clear:function clear(){this.ctx.clearRect(0,0,this.dom.width,this.dom.height)}};JCL.performance=(function(){var e,a,b,g,d;e=new Date();a=0;g=0;b=0;function f(j){if(j){d=document.getElementById(j)}JCL.renderer.registerRender(i)}function i(){var j=new Date();a=(j-e)/1000;g+=a;e=j;b=Math.floor(1/a);if(d){d.innerHTML=b}}function c(){return a}function h(){return g}return{init:f,delta:c,elapsed:h}}());JCL.Point=function Point(a,c,b){this.set(a,c,b)};JCL.Point.prototype={constructor:"Point",set:function set(a,c,b){this.x=a||0;this.y=c||0;this.z=b||0},get:function get(){return{x:this.x,y:this.y,z:this.z}},distance:function distance(b){if(b.constructor==="Point"){return Math.sqrt(Math.pow(b.x-this.x,2)+Math.pow(b.y-this.y,2))}else{JCL.warn("Cannot calculate distance of a non-point.")}return undefined},angle:function angle(b){if(b.constructor==="Point"){return Math.atan2(b.y-this.y,b.x-this.x)}else{JCL.warn("Cannot calculate angle of a non-point.")}return undefined},tangent:function tangent(b,c){var a=JCL.utilities.radians;if(b!==null&&c!==null){return new JCL.Point((c*Math.cos(a(b)))+this.x,(c*Math.sin(a(b)))+this.y)}else{JCL.warn("Could not calculate tangent. Missing required data. (Angle: "+b+", Distance: "+c+")")}return undefined},lerp:function lerp(b,c){if(!c||c<0){c=0}else{if(c>1){c=1}}if(this&&b&&c!==null){if(b.constructor==="Point"){return{x:this.x+((b.x-this.x)*c),y:this.y+((b.y-this.y)*c)}}else{JCL.warn("Could not interpolate point. Invalid point.")}}else{JCL.warn("Could not interpolate point. Missing required data.")}return undefined}};